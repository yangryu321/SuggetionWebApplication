@page "/"
@using SuggestionAppLibrary.Models
@using SuggestionAppLibrary.DataAccess
@using SuggestionWebApplication.Helpers


@inject IUserData userData
@inject AuthenticationStateProvider authProvider










<h1>Hello, world!</h1>

Welcome to your new app.









@code
{
    private UserModel loggedInUser = new UserModel();


    protected async override Task OnInitializedAsync()
    {
        await LoadAndVerifyUser();

    }


    private async Task LoadAndVerifyUser()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        string objectId = authState.User.Claims.FirstOrDefault(x => x.Type.Contains("objectidentifier"))?.Value;

        if(string.IsNullOrEmpty(objectId)==false)
        {
            loggedInUser = await userData.GetUserFromAuthentication(objectId) ?? new();

            string firstName= authState.User.Claims.FirstOrDefault(x => x.Type.Contains("givenname"))?.Value;
            string lastName= authState.User.Claims.FirstOrDefault(x => x.Type.Contains("surname"))?.Value;
            string displayName= authState.User.Claims.FirstOrDefault(x => x.Type.Equals("name"))?.Value;
            string email= authState.User.Claims.FirstOrDefault(x => x.Type.Contains("email"))?.Value;

            bool isDirty = false;

            if (objectId.Equals(loggedInUser.ObjectIdentifier) == false)
            {
                isDirty = true;
                loggedInUser.ObjectIdentifier = objectId;
            }

            if (firstName.Equals(loggedInUser.FirstName) == false)
            {
                isDirty = true;
                loggedInUser.FirstName = firstName;
            }
            if (lastName.Equals(loggedInUser.LastName) == false)
            {
                isDirty = true;
                loggedInUser.LastName = lastName;
            }
            if (displayName.Equals(loggedInUser.DisplayName) == false)
            {
                isDirty = true;
                loggedInUser.DisplayName = displayName;
            }
            if (email.Equals(loggedInUser.EmailAddress) == false)
            {
                isDirty = true;
                loggedInUser.EmailAddress = email;
            }

            if (isDirty)
            {

                if (string.IsNullOrWhiteSpace(loggedInUser.Id))
                {
                    await userData.CreateUser(loggedInUser);
                }
                else
                {
                    await userData.UpdateUser(loggedInUser);
                }
            }


        }





    }




}